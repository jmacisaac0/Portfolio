<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ProfessionalsDatabaseDataSet" targetNamespace="http://tempuri.org/ProfessionalsDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/ProfessionalsDatabaseDataSet.xsd" xmlns="http://tempuri.org/ProfessionalsDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProfessionalsDatabaseDataSet" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProfessionalsDatabaseDataSet (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AthleteDatabase.Properties.Settings.GlobalReference.Default.ProfessionalsDatabaseDataSet" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfessionalsTableTableAdapter" GeneratorDataComponentClassName="ProfessionalsTableTableAdapter" Name="ProfessionalsTable" UserDataComponentName="ProfessionalsTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProfessionalsDatabaseDataSet (Settings)" DbObjectName="dbo.ProfessionalsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProfessionalsTable] WHERE (([Name] = @Original_Name) AND ([Profession] = @Original_Profession))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Profession" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Profession" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProfessionalsTable] ([Name], [Profession]) VALUES (@Name, @Profession);
SELECT Name, Profession FROM ProfessionalsTable WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Profession" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Profession" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Profession FROM dbo.ProfessionalsTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProfessionalsTable] SET [Name] = @Name, [Profession] = @Profession WHERE (([Name] = @Original_Name) AND ([Profession] = @Original_Profession));
SELECT Name, Profession FROM ProfessionalsTable WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Profession" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Profession" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Profession" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Profession" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Profession" DataSetColumn="Profession" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ProfessionalsDatabaseDataSet (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AgentCountQuery" Modifier="Public" Name="AgentCountQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AgentCountQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(Profession) FROM ProfessionalsTable
WHERE Profession LIKE 'Agent'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProfessionalsDatabaseDataSet (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AssistantCountQuery" Modifier="Public" Name="AssistantCountQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="AssistantCountQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(Profession) FROM ProfessionalsTable
WHERE Profession LIKE 'Personal Assistant'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProfessionalsDatabaseDataSet (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="LawyerCountQuery" Modifier="Public" Name="LawyerCountQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="LawyerCountQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(Profession) FROM ProfessionalsTable
WHERE Profession LIKE 'Lawyer'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProfessionalsDatabaseDataSet (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="TrainerCountQuery" Modifier="Public" Name="TrainerCountQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="TrainerCountQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(Profession) FROM ProfessionalsTable
WHERE Profession LIKE 'Trainer'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ProfessionalsDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ProfessionalsDatabaseDataSet" msprop:Generator_UserDSName="ProfessionalsDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ProfessionalsTable" msprop:Generator_TableClassName="ProfessionalsTableDataTable" msprop:Generator_TableVarName="tableProfessionalsTable" msprop:Generator_RowChangedName="ProfessionalsTableRowChanged" msprop:Generator_TablePropName="ProfessionalsTable" msprop:Generator_RowDeletingName="ProfessionalsTableRowDeleting" msprop:Generator_RowChangingName="ProfessionalsTableRowChanging" msprop:Generator_RowEvHandlerName="ProfessionalsTableRowChangeEventHandler" msprop:Generator_RowDeletedName="ProfessionalsTableRowDeleted" msprop:Generator_RowClassName="ProfessionalsTableRow" msprop:Generator_UserTableName="ProfessionalsTable" msprop:Generator_RowEvArgName="ProfessionalsTableRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Profession" msprop:Generator_ColumnVarNameInTable="columnProfession" msprop:Generator_ColumnPropNameInRow="Profession" msprop:Generator_ColumnPropNameInTable="ProfessionColumn" msprop:Generator_UserColumnName="Profession">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProfessionalsTable" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
  </xs:element>
</xs:schema>